{

"macros": {
    "STEP_CMNT":"1's complement, granularity of dtype"
},

"header": [
"#ifndef ISA_H", 
"#define ISA_H",
"",
"#define TONGA_PACKED __attribute__((__packed__))"
],

"footer": ["#endif"],

"instructions": {
"SP_CMD_WRITE_4B": { 
    "opcode" : "0x01",
    "fields": [
        ["struct SP_CMD_HEADER", "hdr"], 
        ["uint8_t",	 "reserved[2]"],
        ["uint32_t", "wdata"],
        ["uint64_t", "address"]
    ],
    "constructor": [
        "SP_CMD_WRITE_4B(uint64_t address,uint32_t value) : ",
		"address(address),wdata(value) {",
		"hdr.type= WRITE_4B;",
		"hdr.dword_len=4;",
		"tonga_assert(address);",
		"tonga_assert(sizeof(*this)==hdr.dword_len*4);",
        "};"
    ]
},
"LDWEIGHTS": {
    "opcode" : "0x00",
    "fields": [
            ["uint8_t",  "opcode"],
            ["uint32_t", "address"],
            ["uint8_t",  "dtype"],
            ["int16_t",  "x_step", "STEP_CMNT"],
            ["uint8_t",  "x_num"],
            ["int16_t",  "y_step"],
            ["uint8_t",  "y_num"],
            ["uint8_t",  "last_row", "id of last partition to read from"]
    ],
    "comments":
    [
        "PeArrayCacheWeights initiates a load of weights towards the",
        " PE array.  It is implicitly assumed that this instruction",
        " reads weights only from the STATE\\_BUFFER, and writes ",
        " weights",
        " into the PE array.  This instruction takes $X\\_NUM\\_ELEMENTS \\times Y\\_NUM\\_ELEMENTS \\leq NUM\\_COLS$ cycles to complete. "
    ]
},
"MATMUL": {
    "opcode" : "0x01",
    "fields":
    [
        ["uint8_t", "opcode"],
        ["uint8_t", "dequant_table_idx"],
        ["uint8_t", "quant_data_size"],
        ["uint8_t", "dequant_data_size"],
        ["uint8_t", "start_tensor_calc"],
        ["uint8_t", "stop_tensor_calc"],
        ["uint8_t", "reserved"],
        ["uint8_t", "dtype"],
        ["uint32_t", "fmap_start_addr"],
        ["int16_t", "fmap_x_step", "STEP_CMNT"],
        ["uint8_t", "fmap_x_num"],
        ["int16_t", "fmap_y_step"],
        ["uint8_t", "fmap_y_num"],
        ["uint8_t", "last_row"],
        ["uint8_t", "n_pad"],
        ["uint8_t", "w_pad"],
        ["uint8_t", "e_pad"],
        ["uint8_t", "s_pad"],
        ["uint32_t", "psum_start_addr"],
        ["uint8_t", "max_col"],
        ["int8_t", "psum_step"],
        ["uint8_t", "event_func"],
        ["uint8_t", "event_id"]
    ]
},
"POOL": {
    "opcode" : "0x80",
    "fields":
    [
        ["uint8_t", "opcode"],
        ["uint8_t", "pool_func"],
        ["uint8_t", "in_dtype"],
        ["uint8_t", "out_dtype"],
        ["uint32_t", "src_start_addr"],
        ["int16_t",  "src_w_step", "STEP_CMNT"],
        ["uint16_t", "src_w_num"],
        ["int16_t",  "src_x_step"],
        ["uint16_t", "src_x_num"],
        ["int16_t",  "src_y_step"],
        ["uint16_t", "src_y_num"],
        ["int16_t",  "src_z_step"],
        ["uint16_t", "src_z_num"],
        ["uint32_t", "dst_start_addr"],
        ["int16_t",  "dst_w_step"],
        ["uint16_t", "dst_w_num"],
        ["int16_t",  "dst_x_step"],
        ["uint16_t", "dst_x_num"],
        ["int16_t",  "dst_y_step"],
        ["uint16_t", "dst_y_num"],
        ["int16_t",  "dst_z_step"],
        ["uint16_t", "dst_z_num"],
        ["uint8_t", "event_func"],
        ["uint8_t", "event_id"]
    ]
},
"SIM_RDIFMAP":  {
    "opcode" : "0xff",
    "fields":
    [
        ["uint8_t",   "opcode"],
        ["uint32_t",  "address"],
        ["char",      "fname[128]"]
    ]
},
"SIM_RDFILTER":  {
    "opcode" : "0xfe",
    "fields":
    [
        ["uint8_t",   "opcode"],
        ["uint32_t",  "address"],
        ["char",      "fname[128]"]
    ]
},
"SIM_WROFMAP":  {
    "opcode" : "0xfd",
    "fields":
    [
        ["uint8_t",  "opcode"],
        ["char",     "fname[128]"],
        ["uint32_t",  "address"],
        ["uint16_t",  "i_n"],
        ["uint16_t",  "w_c"],
        ["uint16_t",  "w_m"],
        ["uint16_t",  "o_rows"],
        ["uint16_t",  "o_cols"],
        ["uint8_t",  "word_size"]
    ]
}
}
}

