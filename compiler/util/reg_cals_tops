#!/usr/bin/python3

# Report Krena+Inkling regression run status

import os
import re
rootdir = "."
freq = 1e9

def simLogGetCycles(filepath):
  cycles = 0
  with open(filepath, 'rb') as fh:
    fh.seek(-100, 2)
    last = fh.readlines()[-1].decode()
    found = re.search('\d+', last)
    if found:
      cycles = found.group(0)
  return int(cycles)

def feLogGetOps(filepath):
  ops = 0
  with open(filepath, 'r') as fh:
    for line in fh:
      match = re.search('INFO: total opcount is (\d+)', line)
      if match:
        ops = int(match.groups(1)[0])
  return ops

print("%-16s  %16s  %16s %16s" % ("Test", "Tops", "Ops", "Cycles"))
print("-" * 70)

for subdir, dirs, files in os.walk(rootdir):
  for file in files:
    #print(os.path.join(subdir, file))
    filepath = subdir + os.sep + file

    if filepath.endswith(".simres"):
      testName = filepath.split("/")[1]
      cycles = simLogGetCycles(filepath)

      feLog = testName + "/" + "log-fe.txt"
      ops = feLogGetOps(feLog)
      tops = 0
      if cycles > 0:
        tops = 1.0 * ops / cycles / 1e12 * freq
      print("%-16s  %16g  %16g %16g" % (testName, tops, ops, cycles))


