
pipeline{

    agent {
        dockerfile {
            dir 'test/jenkins'
            args '-u root -v /home/jenkins:/home/jenkins'
            label 'kaena_c5.18xl'
        }
    }
    environment {
        SRC_DIR = "/workdir/src"
        BLD_DIR = "/workdir/build"

        KAENA_PATH = "$SRC_DIR/kaena-compiler"
        KAENA_EXT_PATH = "$SRC_DIR/kaena-ext"
        INKLING_PATH = "$SRC_DIR/inkling"
        QEMU_INKLING_PATH = "$SRC_DIR/qemu_inkling"
        ARCH_ISA_PATH = "$SRC_DIR/isa"
        KAENA_RT_PATH = "$SRC_DIR/kaena-runtime"
     
    }
    stages {
        stage('Prep'){
            steps {
                sh 'cat /etc/os-release'
                sh 'cat /proc/cpuinfo'
                sh 'df -h'

                sh 'ls -ltrA'
                sh 'rm -rf $SRC_DIR && mkdir -p $SRC_DIR'
                sh 'rm -rf $BLD_DIR && mkdir -p $BLD_DIR'
            }
        }
        stage('Checkout'){

            steps {
                sh '''
		set -x

                cd $SRC_DIR
		ls -ltrA

		repo init -u ssh://siopt.review/tonga/sw/kaena/manifest
		[ -z "$MANIFEST_FILE_NAME" ] && export MANIFEST_FILE_NAME=default.xml
		repo init -m $MANIFEST_FILE_NAME
		repo sync

		git config --global user.name "Jenkins"
		git config --global user.email aws-tonga-kaena@amazon.com

		[ -z "$GERRIT_REFSPEC" ] || \
                git -C kaena-runtime pull origin $GERRIT_REFSPEC || \
                git -C kaena-compiler pull origin $GERRIT_REFSPEC || \
                git -C kaena-ext pull origin $GERRIT_REFSPEC || \
                git -C inkling pull origin $GERRIT_REFSPEC || \
                git -C qemu_inkling pull origin $GERRIT_REFSPEC || \
                git -C isa pull origin $GERRIT_REFSPEC

		chmod -R 755 ./
		ls -ltrA
                '''
            }
        }
        stage('install deps'){
            steps {
                sh '$KAENA_PATH/test/tools/fetch-and-run/alinux_deps_install || echo install deps failed'
            }
        }
        stage('Build') {
            steps {
                sh 'ls -ltrA $SRC_DIR'
                sh 'make -j4 -C $KAENA_PATH'
                sh 'make -j4 PLAT=uio -C $KAENA_RT_PATH/hal/'
                sh 'make -j4 PLAT=dv -C $KAENA_RT_PATH/hal/'
                sh 'make -j4 PLAT=dummy -C $KAENA_RT_PATH/hal/'
                sh 'cd $BLD_DIR && mkdir runtime && cd runtime && cmake $KAENA_RT_PATH && make package'
                sh 'cd $BLD_DIR && source $KAENA_PATH/compiler/wave-checker/scr/build.csh'

                sh 'cd $QEMU_INKLING_PATH && ./configure --target-list=x86_64-softmmu --cxx=c++48 --cc=gcc48 && make -j'
            }
            post {
                success {
                    sh 'ls -lh $BLD_DIR'
                    sh 'ls -lh $BLD_DIR/runtime'
                }
            }
        }
        stage('Regressions') {

            steps {
                sh 'make -j4 -C $KAENA_PATH/test/e2e/ check'
                sh 'cd $KAENA_PATH/test/e2e; [ -z "$RUNALL_ARGS" ] || ./RunAll $RUNALL_ARGS'
                //sh 'make -C $KAENA_INK_PATH check'
            }
        }
    }
    post {
        changed {
            script {
                    // Send an email only if the build status has changed from green/unstable to red
                    emailext subject: '$DEFAULT_SUBJECT',
                        body: '$DEFAULT_CONTENT',
                        recipientProviders: [
                            [$class: 'CulpritsRecipientProvider'],
                            [$class: 'DevelopersRecipientProvider'],
                            [$class: 'RequesterRecipientProvider']
                        ],
                        replyTo: '$DEFAULT_REPLYTO',
                        to: '$DEFAULT_RECIPIENTS'
                }
        }
        always {
            sh 'df -h'
            cleanWs()
        }
    }

}

