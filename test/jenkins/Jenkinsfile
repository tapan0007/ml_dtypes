
pipeline{

    agent {
        dockerfile {
            dir 'test/jenkins'
            args '-u root -v /home/jenkins:/home/jenkins'
            label 'tonga'
        }
    }
    stages {
        stage('Prep'){
            steps {
                sh 'cat /etc/os-release'
                sh 'cat /proc/cpuinfo'
                sh 'df -h'

                sh 'ls -ltrA && rm -rf $WORKSPACE/* && rm -rf $WORKSPACE/.repo '
            }
        }
        stage('Checkout'){

            steps {
                sh 'ls -ltrA'
                sh '''
		set -x

		repo init -u ssh://siopt.review/tonga/sw/kaena/manifest
		[ -z "$MANIFEST_FILE_NAME" ] && export MANIFEST_FILE_NAME=default.xml
		repo init -m $MANIFEST_FILE_NAME
		repo sync

		git config --global user.name "Jenkins"
		git config --global user.email aws-tonga-kaena@amazon.com

		[ -z "$GERRIT_REFSPEC" ] || \
                git -C kaena-runtime pull origin $GERRIT_REFSPEC || \
                git -C kaena-compiler pull origin $GERRIT_REFSPEC || \
                git -C kaena-ext pull origin $GERRIT_REFSPEC || \
                git -C inkling pull origin $GERRIT_REFSPEC || \
                git -C isa pull origin $GERRIT_REFSPEC

		chmod -R 755 ./
                echo "export KAENA_PATH=$WORKSPACE/kaena-compiler" >> ~/.bashrc
                echo "export KAENA_EXT_PATH=$WORKSPACE/kaena-ext" >> ~/.bashrc
                echo "export INKLING_PATH=$WORKSPACE/inkling" >> ~/.bashrc
                echo "export ARCH_ISA_PATH=$WORKSPACE/isa" >> ~/.bashrc
                echo "export KAENA_RT_PATH=$WORKSPACE/kaena-runtime" >> ~/.bashrc
                '''
            }
        }
        stage('install deps'){
            steps {
                sh 'source ~/.bashrc && $KAENA_PATH/test/tools/fetch-and-run/alinux_deps_install || echo install deps failed'
            }
        }
        stage('Build') {

            steps {
                sh 'ls -ltr'
                sh 'source ~/.bashrc && make -C $KAENA_PATH'
                sh 'source ~/.bashrc && make PLAT=uio -C $KAENA_RT_PATH/hal/'
                sh 'source ~/.bashrc && make PLAT=dv -C $KAENA_RT_PATH/hal/'
                sh 'source ~/.bashrc && make PLAT=dummy -C $KAENA_RT_PATH/hal/'
                //archiveArtifacts artifacts: '**/output/*.tgz'
            }
        }
        stage('Regressions') {

            steps {
                sh 'source ~/.bashrc && make -C $KAENA_PATH/test/e2e/ check'
                sh 'source ~/.bashrc && [ -z "$RUNALL_ARGS" ] || $KAENA_PATH/test/e2e/RunAll $RUNALL_ARGS'
                //sh 'source ~/.bashrc && make -C $KAENA_INK_PATH check'
            }
        }
    }
    post {
        changed {
            script {
                    // Send an email only if the build status has changed from green/unstable to red
                    emailext subject: '$DEFAULT_SUBJECT',
                        body: '$DEFAULT_CONTENT',
                        recipientProviders: [
                            [$class: 'CulpritsRecipientProvider'],
                            [$class: 'DevelopersRecipientProvider'],
                            [$class: 'RequesterRecipientProvider']
                        ],
                        replyTo: '$DEFAULT_REPLYTO',
                        to: '$DEFAULT_RECIPIENTS'
                }
        }
	always {
		cleanWs()
	}
    }

}

